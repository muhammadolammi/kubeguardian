# permissions 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-server-sa
  namespace: bank-of-anthos

--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mcp-server-role
  namespace: bank-of-anthos
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "events"]
    verbs: ["get", "list", "watch", "describe", "logs"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcp-server-rolebinding
  namespace: bank-of-anthos
subjects:
  - kind: ServiceAccount
    name: mcp-server-sa
    namespace: bank-of-anthos
roleRef:
  kind: Role
  name: mcp-server-role
  apiGroup: rbac.authorization.k8s.io

---



apiVersion: apps/v1
kind: Deployment

metadata:
  name: mcp-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
    spec:
      serviceAccountName: mcp-server-sa
      containers:
      - name: mcp-server
        image: kubeguardian/mcp-server:latest   
        imagePullPolicy: IfNotPresent
        args:
          - "--mcp-server"
          - "--mcp-server-mode=sse"
          - "--sse-endpoint-port=8085"
          - "--external-tools"
          - "-v=2"
        

        ports: 
          - containerPort: 8085
        env:
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                name: kubeguardian-secrets
                key: GEMINI_API_KEY


--- 

# ai-agent-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mcp-server
spec:
  selector:
    app: mcp-server
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8085
  type: ClusterIP
